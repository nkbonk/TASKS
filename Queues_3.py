# Задачу генерил ГПТ
# В супермаркете работает самодельная система управления очередью к кассе. Каждый покупатель имеет корзину с товарами. 
# Когда покупатель приходит, он добавляется в очередь через команду arrive(n), где n — количество товаров в его корзине. 

# Система обрабатывает очередь по принципу FIFO. Существует команда process() — она обслуживает первого покупателя в очереди: если у него осталось больше одного товара, 
# то система уменьшает количество товаров на один и он остаётся в очереди; если остался один товар, то после обслуживания он уходит из очереди. 
# Нужно реализовать класс CheckoutQueue, поддерживающий команды arrive(n), process() и queue_state(), возвращающий список текущего количества товаров у каждого покупателя в очереди. 

# Если очередь пуста и вызвана команда process(), метод должен вернуть False, иначе True.


class LemonadeQueue:
    def __init__(self):
        self.q = []

    def buy(self, n):
        self.q.append(n)

    def serve(self):
        if not self.q:
            return False
        self.q[0] -= 1
        if self.q[0] == 0:
            self.q.pop(0)
        return True

    def status(self):
        return self.q[:]
